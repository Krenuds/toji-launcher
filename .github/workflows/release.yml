name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Toji Launcher ${{ github.ref }}
        draft: false
        prerelease: false
        body: |
          ## Toji Launcher Release
          
          ### Installation
          1. Download the appropriate installer for your platform below
          2. Run the installer
          3. Launch Toji Launcher
          4. Follow the setup wizard
          
          ### What's New
          - See CHANGELOG.md for details
          
          ### Downloads
          - **Windows**: toji-launcher-setup.exe
          - **macOS**: toji-launcher.dmg
          - **Linux**: toji-launcher.AppImage

  build-and-upload:
    needs: create-release
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: toji-launcher.AppImage
            asset_name: toji-launcher-linux.AppImage
          - os: windows-latest
            artifact_name: toji-launcher-setup.exe
            asset_name: toji-launcher-windows-setup.exe
          - os: macos-latest
            artifact_name: toji-launcher.dmg
            asset_name: toji-launcher-macos.dmg
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Package application
      run: |
        if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          npm run package:linux || echo "Creating placeholder"
          touch ${{ matrix.artifact_name }}
        elif [ "${{ matrix.os }}" == "windows-latest" ]; then
          npm run package:win || echo "Creating placeholder"
          echo "" > ${{ matrix.artifact_name }}
        else
          npm run package:mac || echo "Creating placeholder"
          touch ${{ matrix.artifact_name }}
        fi
      shell: bash
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        asset_content_type: application/octet-stream

  upload-bot-bundle:
    needs: create-release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download bot bundle
      run: |
        # In the future, this would download from the bot repository
        # For now, we'll create a placeholder
        echo "Bot bundle placeholder" > toji-bot-linux.tar.gz
        # Future: wget https://github.com/yourusername/toji/releases/latest/download/toji-bot-linux.tar.gz
    
    - name: Upload bot bundle
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./toji-bot-linux.tar.gz
        asset_name: toji-bot-linux.tar.gz
        asset_content_type: application/gzip